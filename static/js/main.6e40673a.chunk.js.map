{"version":3,"sources":["components/FaceRecognition/FaceRecognition.js","components/Navigation/Navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/Signin/Signin.js","components/Register/Register.js","containers/App.js","serviceWorker.js","index.js","components/Logo/brain.png"],"names":["FaceRecognition","imageUrl","box","className","id","alt","src","height","width","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Navigation","onRouteChange","isSignedIn","display","justifyContent","onClick","Logo","options","max","paddingTop","brain","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","Rank","name","entries","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","this","htmlFor","href","React","Component","Register","onNameChange","onSubmitRegister","particleOptions","particles","number","density","enable","value_area","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","console","log","err","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.6e40673a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './FaceRecognition.css'\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n\treturn(\r\n\t\t<div className = 'center ma'>\r\n\t\t\t<div className='absolute mt2'>\r\n\t\t\t\t<img id='inputImage' alt='' src= { imageUrl } height = 'auto' width = '500px'/>\r\n\t\t\t\t<div className=\"bounding-box\" \r\n\t\t\t\tstyle={{top:box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default FaceRecognition","import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n\t\tif(isSignedIn){\r\n\t\t\treturn(\r\n\t\t\t\t<nav style = {{display: 'flex', justifyContent: 'flex-end'}}>\r\n\t\t\t\t<p \r\n\t\t\t\tonClick = {() => onRouteChange('signout')}\r\n\t\t\t\tclassName = 'f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n\t\t\t\t</nav>\r\n\t\t\t)\r\n\t\t}else{\r\n\t\t\treturn(\r\n\t\t\t\t<nav style = {{display: 'flex', justifyContent: 'flex-end'}}>\r\n\t\t\t\t<p onClick = {() => onRouteChange('signin')} className = 'f3 link dim black underline pa3 pointer'>Sign In</p>\r\n\t\t\t\t<p onClick = {() => onRouteChange('register')} className = 'f3 link dim black underline pa3 pointer'>Register</p>\r\n\t\t\t\t</nav>\r\n\t\t\t)\r\n\t\t}\r\n}\r\n\r\nexport default Navigation","import React from 'react';\r\nimport Tilt from 'react-tilt'\r\nimport brain from './brain.png'\r\nimport './Logo.css'\r\n\r\nconst Logo = () => {\r\n\treturn(\r\n\t\t<div className = 'ma4 mt0 logo'>\r\n\t\t\t<Tilt className=\"Tilt br2 shadow-2\" options={{ max : 45 }} style={{ height: 150, width: 150 }} >\r\n\t\t\t <div className=\"Tilt-inner pa3\"><img style = {{paddingTop: '5px'}} alt='brain-logo' src = {brain} />  </div>\r\n\t\t\t</Tilt>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css'\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<p className = 'f3 tc pa3'>\r\n\t\t\t{`This Magic Brain will detect faces in your pictures. Give it a try`}\r\n\t\t\t</p>\r\n\t\t\t<div className= 'center'>\r\n\t\t\t <div className='form center pa4 br3 shadow-5'>\r\n\t\t\t\t<input className='f4 pa2 w-70 center' type='text'\r\n\t\t\t\tonChange = {onInputChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<button \r\n\t\t\t\tclassName='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\r\n\t\t\t\tonClick = {onButtonSubmit}\r\n\t\t\t\t>Detect\r\n\t\t\t\t</button>\r\n\t\t     </div>\r\n\t\t    </div> \t\r\n\t\t</div>\r\n\t) \r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nconst Rank = ({name, entries}) => {\r\n\treturn(\r\n\t\t<div className = 'tc'>\r\n\t\t\t<div className= 'white f3'>\r\n\t\t\t{`${name}, your current rank is...`}\r\n\t\t    </div> \t\r\n\t\t    <div className= 'white f1'>\r\n\t\t    \t{`${entries}`}\r\n\t\t    </div>\r\n\t\t</div>\r\n\t) \r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\n\r\nclass Signin extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsignInEmail: '',\r\n\t\t\tsignInPassword: ''\r\n\t\t}\r\n\t}\r\n\r\n\tonEmailChange = (event) => {\r\n\t\tthis.setState({signInEmail: event.target.value})\r\n\t}\r\n\r\n\tonPasswordChange = (event) => {\r\n\t\tthis.setState({signInPassword: event.target.value})\r\n\t}\r\n\r\n\tonSubmitSignIn = () => {\r\n    fetch('https://shielded-inlet-92688.herokuapp.com/signin', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user.id) {\r\n          this.props.loadUser(user)\r\n          this.props.onRouteChange('home');\r\n        }\r\n      })\r\n  }\r\n\r\n\trender(){\r\n\t\tconst { onRouteChange } = this.props;\r\n\t\treturn(\r\n\t\t\t<div className = 'center ma'>\r\n\t\t\t\t<article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n\t\t\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n\t\t\t\t\t      <div className=\"mt3\">\r\n\t\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t\t\t        <input \r\n\t\t\t\t\t        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t\t        type=\"email\" \r\n\t\t\t\t\t        name=\"email-address\"  \r\n\t\t\t\t\t        id=\"email-address\" \r\n\t\t\t\t\t        onChange = {this.onEmailChange}\r\n\t\t\t\t\t        />\r\n\t\t\t\t\t      </div>\r\n\t\t\t\t\t      <div className=\"mv3\">\r\n\t\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t\t\t\t        <input \r\n\t\t\t\t\t        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t\t        type=\"password\"\r\n\t\t\t\t\t        name=\"password\"  \r\n\t\t\t\t\t        id=\"password\" \r\n\t\t\t\t\t        onChange = {this.onPasswordChange}\r\n\t\t\t\t\t        />\r\n\t\t\t\t\t      </div>\r\n\t\t\t\t\t    </fieldset>\r\n\t\t\t\t\t    <div className=\"\">\r\n\t\t\t\t\t      <input \r\n\t\t\t\t\t        onClick = {this.onSubmitSignIn}\r\n\t\t\t\t\t      \tclassName=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n\t\t\t\t\t      \ttype=\"submit\" \r\n\t\t\t\t\t      \tvalue=\"Sign in\" \r\n\t\t\t\t\t      \t/>\r\n\t\t\t\t\t    </div>\r\n\t\t\t\t\t    <div className=\"lh-copy mt3\">\r\n\t\t\t\t\t      <p onClick = {() => onRouteChange('register')} href=\"#0\" className=\"f6 link dim black db pointer\">Register</p>\r\n\t\t\t\t\t    </div>\r\n\t\t\t\t\t</main>\r\n\t\t\t\t</article>\t\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Signin","import React, { Component } from 'react';\r\n\r\nclass Register extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tname: '',\r\n\t\t\temail: '',\r\n\t\t\tpassword: ''\r\n\t\t}\r\n\t}\r\n\r\n\tonNameChange = (event) => {\r\n\t\tthis.setState({name: event.target.value})\r\n\t}\r\n\r\n\tonEmailChange = (event) => {\r\n\t\tthis.setState({email: event.target.value})\r\n\t}\r\n\r\n\tonPasswordChange = (event) => {\r\n\t\tthis.setState({password: event.target.value})\r\n\t}\r\n\r\n\t// https://shielded-inlet-92688.herokuapp.com\r\n\tonSubmitRegister = () => {\r\n\t\tfetch('https://shielded-inlet-92688.herokuapp.com/register', {\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tname:this.state.name,\r\n\t\t\t\temail: this.state.email,\r\n\t\t\t\tpassword: this.state.password\r\n\t\t\t})\r\n\t\t})\r\n\t\t  .then(response => response.json())\r\n\t\t  .then(user => {\r\n\t\t  \tif(user.id){\r\n\t\t  \t\tthis.props.loadUser(user);\r\n\t\t  \t\tthis.props.onRouteChange('home');\r\n\t\t  \t}\r\n\t\t  })\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t<div className = 'center ma'>\r\n\t\t\t<article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n\t\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t\t  <div className=\"measure\">\r\n\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n\t\t\t\t       <div className=\"mt3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n\t\t\t\t        type=\"name\" \r\n\t\t\t\t        name=\"name\"  \r\n\t\t\t\t        id=\"Name\" \r\n\t\t\t\t        onChange = {this.onNameChange}\r\n\t\t\t\t        />\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"mt3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t\t        <input\r\n\t\t\t\t         className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n\t\t\t\t         type=\"email\" \r\n\t\t\t\t         name=\"email-address\"  \r\n\t\t\t\t         id=\"email-address\" \r\n\t\t\t\t         onChange = {this.onEmailChange}\r\n\t\t\t\t         />\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"mv3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n\t\t\t\t        type=\"password\" \r\n\t\t\t\t        name=\"password\"  \r\n\t\t\t\t        id=\"password\"\r\n\t\t\t\t        onChange = {this.onPasswordChange}\r\n\t\t\t\t        />\r\n\t\t\t\t      </div>\r\n\t\t\t\t    </fieldset>\r\n\t\t\t\t    <div className=\"tc\">\r\n\t\t\t\t      \t<input \r\n\t\t\t\t      \tonClick = {this.onSubmitRegister}\r\n\t\t\t\t      \tclassName=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib tc\"\r\n\t\t\t\t      \ttype=\"submit\" \r\n\t\t\t\t      \tvalue=\"Register\" />\r\n\t\t\t\t    </div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</main>\r\n\t\t\t</article>\t\r\n\t\t</div>\r\n\t)\r\n\t}\r\n}\r\n\r\nexport default Register","import React, {Component} from 'react';\nimport Particles from 'react-particles-js';\nimport FaceRecognition from '../components/FaceRecognition/FaceRecognition';\nimport Navigation from '../components/Navigation/Navigation'\nimport Logo from '../components/Logo/Logo';\nimport ImageLinkForm from '../components/ImageLinkForm/ImageLinkForm'\nimport Rank from '../components/Rank/Rank';\nimport Signin from '../components/Signin/Signin'\nimport Register from '../components/Register/Register'\nimport './App.css';\n\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nconst initialState = {\n      input: '',\n      imageUrl:'',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = initialState\n  }\n\nloadUser = (data) => {\n  this.setState({user:{\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }\n  })\n}\ncalculateFaceLocation = (data) => {\n  const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n  const image = document.getElementById('inputImage');\n  const width = Number(image.width);\n  const height = Number(image.height);\n  return {\n    leftCol: clarifaiFace.left_col * width,\n    topRow: clarifaiFace.top_row * height,\n    rightCol: width - (clarifaiFace.right_col * width),\n    bottomRow: height - (clarifaiFace.bottom_row * height)\n  }\n}\n\ndisplayFaceBox = (box) => {\n  this.setState({box:box})\n}\n\nonInputChange = (event) => {\n  this.setState({\n    input:event.target.value\n  })\n}\n\nonButtonSubmit = () => {  \n  this.setState({imageUrl: this.state.input})\n  \n    fetch('https://shielded-inlet-92688.herokuapp.com/imageurl', {\n        method: 'post',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          input: this.state.input\n        })\n    })\n    .then(response => response.json())\n    .then(response => {\n      if(response){\n        fetch('https://shielded-inlet-92688.herokuapp.com/image', {\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            id: this.state.user.id\n          })\n        })\n        .then(response => response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, {entries:count}))\n        })\n        .catch(console.log)\n      }\n       this.displayFaceBox(this.calculateFaceLocation(response))\n    })   \n    .catch(err => console.log(err));\n}\n\nonRouteChange = (route) => {\n  if(route === 'signout'){\n    this.setState(initialState)\n  }else if(route === 'home'){\n    this.setState({isSignedIn: true})\n  }\n  this.setState({route: route})\n}\n\n  render(){\n    const { isSignedIn, imageUrl, route, box, user } = this.state\n    return(\n      <div className = 'App'>\n        <Particles className = 'particles'\n              params={particleOptions}\n        />\n        <Navigation onRouteChange = {this.onRouteChange} isSignedIn = {isSignedIn}/>\n        { this.state.route === 'home' \n          ? <div>\n            <Logo />\n            <Rank name = {this.state.user.name} entries = {this.state.user.entries}/>\n            <ImageLinkForm \n            onInputChange = {this.onInputChange}\n            onButtonSubmit = {this.onButtonSubmit}\n            />\n            <FaceRecognition box= {box} imageUrl = {imageUrl}/>\n          </div> \n          :(route === 'signin')\n           ?<Signin onRouteChange = {this.onRouteChange} loadUser = {this.loadUser}/>\n           :<Register loadUser = {this.loadUser} onRouteChange = {this.onRouteChange}/>\n        }\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { Component } from 'react';\n// import Clarifai from 'clarifai';\n// import Particles from 'react-particles-js';\n// import Register from '../components/Register/Register';\n// import Signin from '../components/Signin/signin';\n// import Navigation from '../components/Navigation/Navigation';\n// import Logo from '../components/Logo/Logo';\n// import ImageLinkForm from '../components/ImageLinkForm/ImageLinkForm';\n// import FaceRecognition from '../components/FaceRecognition/FaceRecognition';\n// import Rank from '../components/Rank/Rank';\n// import './App.css';\n\n// // const app = new Clarifai.App({\n// //        apiKey: '5e048cb9286845cfbc0dff14238b93fc'\n// //       });\n\n// const particleOptions = \n// {\n//   particles: {\n//       number:{\n//         value:80,\n//         density:{\n//           enable: true,\n//           value_area:800\n//         }\n//       }\n//   }\n// }\n// class App extends Component {\n//   constructor(){\n//     super();\n//       this.state = {\n//         input: '',\n//         imageUrl:'',\n//         box: {},\n//         route: 'signin',\n//         isSignedIn : false,\n//         user: {\n//           id: \"\",\n//           name: '',\n//           email: '',\n//           entries: 0,\n//           joined: ''  \n//         }\n//       }\n//   }  \n\n//   loadUser = (data) => {\n//      this.setState({user: {\n//         id: data.id,\n//         name: data.name,\n//         email: data.email,\n//         entries: data.entries,\n//         joined: data.joined\n//     }})\n//   }\n\n//    calculateFaceLocation = (data) => {\n//       const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n//       const image =document.getElementById('inputImage');\n//       const width = Number(image.width);\n//       const height = Number(image.height);\n//       return {\n//         leftCol : clarifaiFace.left_col * width,\n//         topRow : clarifaiFace.top_row * height,\n//         rightCol : width - (clarifaiFace.right_col * width),\n//         bottomRow : height - (clarifaiFace.bottom_row * height)\n//       }\n//    }\n\n\n//    displayFaceBox = (box) => {\n//       this.setState({box:box})\n//    }\n\n//    onInputChange = (event) =>{\n//       this.setState({input: event.target.value});\n//     }\n\n//     onButtonSubmit = () => {\n//       this.setState({imageUrl: this.state.input});\n//       app.models.predict(\n//         Clarifai.FACE_DETECT_MODEL,\n//         this.state.input)\n//       .then(response => {\n//         if(response){\n//           fetch('http://localhost:3000/image', {\n//             method: 'put',\n//             headers: {'Content-Type': 'application/json'},\n//             body: JSON.stringify({\n//               id: this.state.user.id\n//              })\n//           })\n//           .then(response => response.json())\n//           .then(count => {\n//             this.setState(Object.assign(this.state.user, {entries : count}))\n//           })\n//         }\n      \n//         this.displayFaceBox(this.calculateFaceLocation(response))\n//        })\n//        .catch(err => console.log(err));  \n//     }\n\n//     onRouteChange = (route) => {\n//       if(route === 'signout'){\n//         this.setState({isSignedIn: false})\n//       }else if(route === 'home'){\n//         this.setState({isSignedIn: true})\n//       }\n//       this.setState({route: route});\n//     }\n\n//   render(){\n//     const { isSignedIn, imageUrl, route, box } = this.state;\n//     return (\n//     <div className=\"App\">\n//       <Particles className='particles'\n//               params={particleOptions}\n//       />\n//       <Navigation isSignedIn = {isSignedIn} onRouteChange = {this.onRouteChange}/>\n//       { route === 'home' \n//           ? <div>\n//               <Logo />\n//               <Rank />\n//               <ImageLinkForm \n//               onInputChange = {this.onInputChange}\n//               onButtonSubmit = {this.onButtonSubmit}/>\n//               <FaceRecognition box={box} imageUrl={imageUrl} />     \n//             </div>\n//           : (\n//               route === 'signin' \n//               ? <Signin onRouteChange = {this.onRouteChange}/>\n//               : <Register loadUser = { this.loadUser } onRouteChange = {this.onRouteChange}/>\n//             )\n//      } \n//     </div>\n//   );\n//   }\n// }\n\n// export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.4100098c.png\";"],"sourceRoot":""}